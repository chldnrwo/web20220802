import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Deque;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;

public class Main {
	static StringBuilder sb = new StringBuilder();
		static int N;
	public static void main(String[] args) throws Exception {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		Stack<Integer> stack = new Stack<Integer>();
		
		N = Integer.parseInt(br.readLine());
		int[] arr = new int[N];
		int[] cnt = new int[1_000_001];
		int[] arr2 = new int[N];
		int[] result = new int[N];
		StringTokenizer s = new StringTokenizer(br.readLine());
		for(int i=0;i<N;i++) {
			arr[i] = Integer.parseInt(s.nextToken());
		}
		
		for(int i=0;i<N;i++) {
			cnt[arr[i]]++;
		}
		for(int i=0;i<N;i++) {
			arr2[i] = cnt[arr[i]];
		}
		
		
		for(int i=0;i<N;i++) {
			while(!stack.empty()&&arr2[stack.peek()]<arr2[i]) {
				result[stack.pop()] = arr[i]; 
			}		
			stack.push(i);
		}
	
		while(!stack.empty()) {
			result[stack.pop()] = -1;
		}
		
		for(int i=0;i<N;i++) {
			sb.append(result[i]+" ");
		}
		System.out.println(sb);
	}
	
}

//