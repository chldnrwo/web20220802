import java.util.Scanner;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

public class Main {
	 
	public static void main(String[] args) throws NumberFormatException, IOException {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		//int N = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		//String str = sb.toString();
		//String[] arr = new String[a.length()];
		int N = in.nextInt();
		int[] arr = new int[6];
		for(int i=0;i<N;i++){
			for(int j=0;j<6;j++){
				arr[j] = in.nextInt();
				
			}
			System.out.println(d(arr));
		}
		
	}
	
	public static int d(int[] arr){ 
		
		double distance = Math.pow(arr[0] - arr[3], 2) + Math.pow(arr[1] - arr[4], 2);
		
		if(arr[0]==arr[3]&&arr[1]==arr[4]&&arr[2]==arr[5]) {
			return -1;
		}
		else if(distance > Math.pow(arr[2]+arr[5],2)) {
			return 0;
		}
		else if(distance < Math.pow(arr[2]-arr[5],2)) {
			return 0;
		}
		else if(distance == Math.pow(arr[2]-arr[5],2)) {
			return 1;
		}
		else if(distance == Math.pow(arr[2]+arr[5],2)) {
			return 1;
		}
		
		return 2;
	}
	
	
}

//문제를 못알아듣겠다
//요점은 접점을 구하는 문제
//원이 겹칠 경우 무한대 
//원이 두점에서 겹치는경우
//원의 끝만 겹치는 경우
//원이 안 겹치는 경우
//원이 완전히 겹치는 경우
//sqrt는 사용불가 부동소수점의 실수가 정확하지 않기 때문