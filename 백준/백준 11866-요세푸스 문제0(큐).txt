import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;

import javax.script.ScriptEngine;
import javax.script.ScriptEngineFactory;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Deque;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class Main {
		static StringBuilder sb = new StringBuilder();
	public static void main(String[] args) throws NumberFormatException, IOException, ScriptException {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		Deque<Integer> q = new LinkedList<Integer>();
		
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		int[] arr = new int[N]; 
		for(int i=1;i<=N;i++) {
			q.offer(i);
		}
		int num=0;
		while(q.size()!=0) {
			for(int i=0;i<M-1;i++) {
				int temp = q.peek(); 
				q.pop();
				q.offer(temp);
			}
			arr[num] = q.peek();
			q.pop();
			num++;
			
		}
		sb.append("<");
		for(int i=0;i<N-1;i++) {
			sb.append(arr[i]+", ");
		} 
		sb.append(arr[arr.length-1]+">");
		System.out.println(sb.toString());
	}
	
	
}




//스트링 빌더 버퍼리더 써야됨 입출력이 많기에
//스트링 빌더로 리턴하는 방법도 있다