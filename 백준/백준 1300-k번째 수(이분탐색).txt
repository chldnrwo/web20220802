import java.util.Scanner;
import java.util.StringTokenizer;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Deque;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

public class Main {
		static StringBuilder sb = new StringBuilder();
		static int N,K;
	public static void main(String[] args) throws Exception {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		//StringTokenizer st = new StringTokenizer(br.readLine());

		N = in.nextInt();
		K = in.nextInt();
		
		bs();
		
	}
	
	public static long count(long D) {
		long count = 0;
		for(int i=1;i<=N;i++){
			count+=Math.min(D/i, N);
		}
		return count;
	}
	public static void bs() {
		long bot = 1;
		long top = K;
		long mid = 0;
		while(bot<top) {
			mid = (bot+top)/2;
			
			if(count(mid)>=K) {
				top = mid;
			}else {
				bot = mid+1;
			}
		}
		System.out.println(bot);
	}
	
}

//Lowerbound 구현 =값을 아래쪽이 가져감
//Upperbound 구현 =값을 위쪽이 가져감  이외의 코드는 동일
//1.long처리 안해놓음
//2.top을 K^2로 놓으면 long이 와도 못담는 경우가 생긴다.