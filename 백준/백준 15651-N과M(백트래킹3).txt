import java.util.Scanner;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

public class Main {
	 
	public static int N,M;
	public static int[] arr;
	public static boolean[] visit;
	public static StringBuilder sb = new StringBuilder();
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		//int N = Integer.parseInt(br.readLine());
		//String str = sb.toString();
		//String[] arr = new String[a.length()];
		N = in.nextInt(); // N개 중에
		M = in.nextInt(); // M개 고르기
		
		visit = new boolean[N];
		arr = new int[M];
		dfs(0);
		System.out.println(sb);
	}

	public static void dfs(int depth){ 
		if(depth == M) {
			for(int i=0;i<M;i++) {
				sb.append(arr[i]).append(" ");
			}
			sb.append("\n");
			return;
		}
		
		
		for(int i=0;i<N;i++) {
			//if(!visit[i]) {
			//	visit[i]=true;
				arr[depth]=i+1;
				dfs(depth+1);
			//	visit[i]=false;
			//}
		}
	}
	
	
}

//세번째는 자기자신까지 포함하면서 
//다중포문써도 될거같긴한데 문제가 원하는 바가 아니므로 지양
//visit배열의 허가를 받는 부분을 주석처리