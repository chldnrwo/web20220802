import java.util.Scanner;
import java.util.StringTokenizer;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Deque;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;

public class Main {
		static StringBuilder sb = new StringBuilder();
		static int N,M;
		static int[] arrX = {-1,0,1,0};
		static int[] arrY = {0,1,0,-1};
		static int[][] arr,dp;
	public static void main(String[] args) throws Exception {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
			//입력값 및 배열 생성
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		
		arr = new int[N+1][M+1];
		dp = new int[N+1][M+1];
		for(int i=1;i<=N;i++) {
			st = new StringTokenizer(br.readLine());
			for(int j=1;j<=M;j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		for(int i=1;i<=N;i++) {
			for(int j=1;j<=M;j++) {
				dp[i][j] = -1;
			}
		}
		
		
		System.out.println(dfs(1,1));
		
//		for(int i=0;i<=N;i++) {
//			for(int j=0;j<=M;j++) {
//				System.out.print(arr[i][j]+" ");
//			}
//			System.out.println();
//		}
//		for(int i=0;i<=N;i++) {
//			for(int j=0;j<=M;j++) {
//				System.out.print(dp[i][j]+" ");
//			}
//			System.out.println();
//		}
		
	}
	public static int dfs(int x, int y) {
		
		if(x==N && y==M) {
			return 1;
		}
		if(dp[x][y]!=-1) {
			return dp[x][y];
		}
		dp[x][y] = 0;
		for(int i=0;i<4;i++) {
			int tmpX = x+arrX[i];
			int tmpY = y+arrY[i];
			
			if(tmpX<1||tmpX>N||tmpY<1||tmpY>M) {
				continue;
			}
				if(arr[x][y]>arr[tmpX][tmpY]) {
					dp[x][y]+=dfs(tmpX, tmpY);
				}
			
			
		}
		
		return dp[x][y];
		
	}
	
}

//함수 중간에 dp[x][y]=0으로 초기화를 안했었음