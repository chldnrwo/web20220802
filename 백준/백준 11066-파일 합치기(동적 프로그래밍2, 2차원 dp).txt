import java.util.Scanner;
import java.util.StringTokenizer;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Deque;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;

public class Main {
		static StringBuilder sb = new StringBuilder();
		static int[][] dp;
		static int[] arr;
		static int[] sum;
	public static void main(String[] args) throws Exception {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int N = in.nextInt();
		for(int a=0;a<N;a++) {
			int K =in.nextInt();
			arr = new int[K];
			dp = new int[K][K];
			sum = new int[K];
			for(int b=0;b<K;b++) {
				arr[b]=in.nextInt();
			}
			sum[0]=arr[0];
			for(int b=1;b<K;b++) {
				sum[b]=sum[b-1]+arr[b];
			}
			
			for(int b = 0; b < K-1; b++) {
				dp[b][b+1] = arr[b] + arr[b+1];
			}
			
			//dp[i][j] = Math.min(dp[i][j], dp[i][k]+dp[k+1][j]+sumV(i,j));
			for(int margin=2;margin<K;margin++) {
				
				for(int i=0;margin+i<K;i++) {
					int j=margin+i;
					dp[i][j] = Integer.MAX_VALUE;
					for(int k=i;k<j;k++) {
						dp[i][j] = Math.min(dp[i][j], dp[i][k]+dp[k+1][j]+sumV(i,j));
					}
				}
			}
//			for(int i=0;i<K;i++) {
//				for(int j=0;j<K;j++) {
//					System.out.print(dp[i][j]+" ");
//				}
//				System.out.println();
//			}
			sb.append(dp[0][K-1]).append("\n");
		}
		System.out.println(sb);
	}
	public static int sumV(int start, int end){
		if(start == 0) {
			 return sum[end];
		}   
		else {
			 return sum[end] - sum[start-1];
		}         
	}
	
}

//이게 어떻게 골드?