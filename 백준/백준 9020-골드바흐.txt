import java.util.Scanner;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

public class Main {
	 
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int M = in.nextInt();
		//int N = in.nextInt();
		//String a = in.next();
		//String[] arr = new String[a.length()];
		
		for(int i=0;i<M;i++) {
			int N = in.nextInt();
			e(N);
		}
	}
	
	public static int d(int A){
		//에라스토테네스의 체로 개선한 소수판별기
		double a = Math.sqrt(A);
		if(A==1) {
			return 0;
		}
			for(int j=2;j<=a;j++) {
				if(A%j==0) {
					return 0;
				}	
			}
			return A;
	}
	
	public static void e(int B){
		//반쪽개고 ++하는 함수
		
		if(B%2==0){
			for(int i =0;i<=B/2;i++) {
				int a = B/2-i;
				int b = B/2+i;
				if(d(a)!=0&&d(b)!=0) {
					System.out.println(a+" "+b);
					break;
				}
			}
		}
		else {
			for(int i =0;i<=B/2;i++) {
				int a = (B-1)/2-i;
				int b = (B-1)/2+1-i;
				if(d(a)!=0&&d(b)!=0) {
					System.out.println(a+" "+b);
					break;
				}
				a--;
				b++;
			}
			
		}
		
	}
}

//함수 두개쓰는 식
//소수판별함수   간극작은 소수찾는 함수
//골드바흐 파티션 설계
//n값 받고 반으로 쪼갬
//양쪽에 1씩 늘이고 줄여나감
//양쪽이 다 소수라면 출력