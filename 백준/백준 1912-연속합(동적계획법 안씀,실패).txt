import java.util.Scanner;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

public class Main {
	 
	public static void main(String[] args) throws NumberFormatException, IOException {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		//int N = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		//String str = sb.toString();
		//String[] arr = new String[a.length()];
		int N = in.nextInt();
		int[] arr = new int[N];
		for(int i=0;i<N;i++) {
			arr[i]=in.nextInt();
		}
		
		System.out.println(d(arr));
	}
	
	public static int d(int[] arr){ 
		int[] arrO = arr.clone();
		List<Integer> list = new ArrayList<Integer>();
		for(int i=0;i<arr.length-1;i++) {
			if(arr[i]>=0&&arr[i+1]>=0) {
				arr[i+1]+=arr[i];
				arr[i]=0;
			}
			else if(arr[i]<0&&arr[i+1]<0) {
				arr[i+1]+=arr[i];
				arr[i]=0;
			}
		}
		for(int i=0;i<arr.length;i++) {
			if(arr[i]!=0) {
				list.add(arr[i]);
			}
		}
		int max = Collections.max(list);
		int maxIndex = list.indexOf(max);
		int cnt=1;
		if(list.size()==1) {
			Arrays.sort(arrO);
			return arrO[arrO.length-1];
		}
		
		
		if(maxIndex-cnt>=0&&maxIndex-cnt-1>=0) {
			while(list.get(maxIndex-cnt)+list.get(maxIndex-cnt-1)>0) {
				max+=list.get(maxIndex-cnt)+list.get(maxIndex-cnt-1);
				cnt=cnt+2;
			}
		}
		if(maxIndex+cnt<list.size()&&maxIndex+cnt+1<list.size()) {
			while(list.get(maxIndex+cnt)+list.get(maxIndex+cnt+1)>0) {
				max+=list.get(maxIndex+cnt)+list.get(maxIndex+cnt+1);
				cnt=cnt+2;
			}
		}
		System.out.println(list);
		
		return max;
	}
	
	
}

//1차 리스트정리때 max가 두개였다면 틀릴수도 있다
//예제는 다 통과 4퍼에서 걸림
//반례
/*
30
2 -3 10 -6 -2 -4 -5 3 -9 3 8 -6 -6 4 6 -7 5 -7 3 4 10 0 -3 -6 6 -9 -7 -10 0 -2
답 18
출력 17
*/
