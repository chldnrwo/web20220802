import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Deque;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;

public class Main {
	static StringBuilder sb = new StringBuilder();
		static int N;
		static int result=0;
		
	public static void main(String[] args) throws Exception {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		Stack<Integer> stack = new Stack<Integer>();
		
		N = Integer.parseInt(br.readLine());

		int[] arr = new int[100002];
		for(int i=1;i<N+1;i++) {
			arr[i]=Integer.parseInt(br.readLine());
		}
		stack.push(0);
		for(int i=1;i<=N+1;i++) {
			while(!stack.empty()&&(arr[i]<arr[stack.peek()])) {
				
					int check = stack.peek();
					stack.pop();
					//System.out.println(arr[i]+" "+arr[check]*(i-stack.peek()-1));
					//System.out.println(stack.toString());
					result = Math.max(result, arr[check]*(i-stack.peek()-1));
				
					
			}
			stack.push(i);
		}

		System.out.println(result);
	}
	
}

//분할 정복보단 간단한듯