import java.util.Scanner;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

public class Main {
	 	 
	public static void main(String[] args) throws IOException {
		Scanner in = new Scanner(System.in);
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int N = Integer.parseInt(br.readLine());
		
		int[] cnt=new int[10001];
		
		for(int i=0;i<N;i++) {
			cnt[Integer.parseInt(br.readLine())]++;
		}//카운팅배열에 연산, 잘 작동

		StringBuilder sb = new StringBuilder();
		
		for(int i=0;i<10001;i++) {
			while(cnt[i]!=0) {
				sb.append(i+"\n");
				cnt[i]--;
			}
		}
		
		String str = sb.toString();
		System.out.println(str);
	}
	
}

//앞에랑 동일한 문제=>그대로 넣었더니 당연하게도 메모리 초과 
//카운팅 정렬
//이번엔 시간 초과 스트링 빌더 써야됨, 스트링빌더 써도 시간초과
//스캐너도 버퍼리더로 바꿔보자, 버퍼리더 써도 시간초과