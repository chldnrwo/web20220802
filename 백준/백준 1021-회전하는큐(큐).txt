import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;

import javax.script.ScriptEngine;
import javax.script.ScriptEngineFactory;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Deque;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class Main {
		static StringBuilder sb = new StringBuilder();
	public static void main(String[] args) throws NumberFormatException, IOException, ScriptException {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		//StringTokenizer st = new StringTokenizer(br.readLine());
		
		Deque<Integer> q = new LinkedList<Integer>();
		
		int N = in.nextInt();
		int M = in.nextInt();
		for(int i=1;i<=N;i++) {
			q.offer(i);
		}
		int count=0;
		
		for(int i=0;i<M;i++) {
			
			int target = in.nextInt();
		
			int cnt=0;
			
			for(int num : q){
				if(num==target) {
				
					break;
					
				}else {
					cnt++;
				}
			}
			
			double ruler = q.size()/2+1;
			if(ruler>cnt) {
				//뒤로 보내기
				while(q.peek()!=target) {
					int temp = q.peek();
					q.pop();
					q.offer(temp);
					count++;
				}
			}
			else {
				//앞으로 보내기
				
				while(q.peek()!=target) {
					int temp = q.peekLast();
					q.pollLast();
					q.addFirst(temp);
					count++;
				}
			}
			if(q.peek()==target) {
				
				q.pop();
				
			}
		}
		
		System.out.println(count);
	}
	
	
}




//토크나이저 안쓰면 잘 닫아놓자