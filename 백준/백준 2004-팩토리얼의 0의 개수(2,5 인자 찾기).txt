import java.util.Scanner;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

public class Main {
	
	public static void main(String[] args) throws NumberFormatException, IOException {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		//int N = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		//String str = sb.toString();
		//String[] arr = new String[a.length()];
		int N = in.nextInt();
		int M = in.nextInt();
		
		int F = d(N)-d(M)-d(N-M);
		int T = d2(N)-d2(M)-d2(N-M);
		if(F>T) {
			System.out.println(T);
		}
		else {
			System.out.println(F);
		}

		
	}
	
	public static int d(int n){
		int sum=0;
		int powF = checkF(n);
		
		for(int i=1;i<=powF;i++) {
			sum += n/(Math.pow(5, i));
		}
		return sum;
	}
	
	public static int d2(int n){
		int sum=0;
		int powF = checkT(n);
		
		for(int i=1;i<=powF;i++) {
			sum += n/(Math.pow(2, i));
		}
		return sum;
	}
	
	public static int checkF(int n) { //n값이하 중 최대 5의제곱승 탐색
		for(int i=0;;i++) {
			if(Math.pow(5, i)>n) {
				return i-1;
			}
		}
	}
	
	public static int checkT(int n) { //n값이하 중 최대 2의제곱승 탐색
		for(int i=0;;i++) {
			if(Math.pow(2, i)>n) {
				return i-1;
			}
		}
	}
	
	
}

//제일 위에 스태틱 이차원 배열이 너무 크면 자바에서 오류 발생
//1퍼에서 틀림
//5의 조합이 2의 조합보다 더 많은 경우도 존재함 EX)5C1 10C2 5C4