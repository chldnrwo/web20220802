import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;

import javax.script.ScriptEngine;
import javax.script.ScriptEngineFactory;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Deque;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class Main {
	static StringBuilder sb = new StringBuilder();
	static int cnt;
	static int K;
	static int result=-1;
	static int[] arr, tmp;
	public static void main(String[] args) throws Exception {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		//StringTokenizer st = new StringTokenizer(br.readLine());
		
		int N = in.nextInt();
		K = in.nextInt();
		
		arr = new int[N];
		tmp = new int[N];
		for(int i=0;i<N;i++) {
				arr[i]=in.nextInt();
		}
		sort(arr, 0, N-1);
		System.out.println(result);
	}
	public static void sort(int[] arr, int p, int r) {
		if(cnt>K) return;
		if(p<r) {
			int q=(p+r)/2;
			sort(arr,p,q);
			sort(arr,q+1,r);
			merge(arr, p, q, r);
		}
		
	}
	public static void merge(int arr[], int p, int q, int r) {
		int i=p;
		int j=q+1;
		int t=0;
		while(i<=q&&j<=r) {
			if(arr[i] <= arr[j]) {
				tmp[t++] = arr[i++];
			}else {
				tmp[t++] = arr[j++];
			}
		}
		while(i<=q) {
			tmp[t++]=arr[i++];
		}
		while(j<=r) {
			tmp[t++]=arr[j++];
		}
		i=p;
		t=0;
		while(i<=r) {
			cnt++;
			if(cnt==K) {
				result = tmp[t];
				break;
			}
			arr[i++]=tmp[t++];
		}
	}
	
}

