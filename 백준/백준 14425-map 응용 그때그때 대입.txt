import java.util.Scanner;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

public class Main {
	 
	public static void main(String[] args) throws NumberFormatException, IOException {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		//int N = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder();
		//String str = sb.toString();
		//String[] arr = new String[a.length()];
		int N = in.nextInt();
		int M = in.nextInt();
		HashMap<String, Integer> hashMap = new HashMap<String, Integer>();
	
		for(int i=0;i<N;i++) {
			hashMap.put(in.next(), 0);
		}
		int cnt=0;
		for(int i=0;i<M;i++) {
			if(hashMap.containsKey(in.next())) {
				cnt++;
			}
		}
		System.out.println(cnt);
	}
	
	

	
	
}

// 그때 그때 입력 받은 배열로 바로 비교해서 시간 복잡도를 줄이는 방법은 놀라웠다.
// containsKey의 탐색 시간복잡도는 1 // n보다도 작다!