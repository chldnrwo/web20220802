import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;

import javax.script.ScriptEngine;
import javax.script.ScriptEngineFactory;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;

public class Main {
		static StringBuilder sb = new StringBuilder();
	public static void main(String[] args) throws NumberFormatException, IOException, ScriptException {
		Scanner in = new Scanner(System.in);
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		//StringTokenizer st = new StringTokenizer(br.readLine());
		
		
		while(true) {
			
			String str = br.readLine();
			if(str.equals(".")) {
				break;
			}
			d(str);
		}
		System.out.println(sb.toString());
	}
	
	
	public static StringBuilder d(String str) {
		Stack<Integer> stack = new Stack<Integer>();
		//Stack<Integer> stack2 = new Stack<Integer>();
		for(int j=0;j<str.length();j++) {
			String str2 = str.substring(j, j+1);
	
			if(str2.equals("(")) {
				stack.push(1);
			}
			else if(str2.equals(")")) {
				
				if(!stack.empty()) {
					if(stack.get(stack.size()-1)!=1){
						return sb.append("no"+"\n");
					}else {
						stack.pop();
					}
				} else {
					return sb.append("no"+"\n");
				}
			}
			
			if(str2.equals("[")) {
				stack.push(2);
			}
			else if(str2.equals("]")) {
				
				if(!stack.empty()) {
					if(stack.get(stack.size()-1)!=2){
						return sb.append("no"+"\n");
					}else {
						stack.pop();
					}
				} else {
					return sb.append("no"+"\n");
				}
			}
			
		}
		if(stack.size()==0
				//&&stack2.size()==0
				) {
			return sb.append("yes"+"\n");	 
		}else{
			return sb.append("no"+"\n");	 	
		}
	}
}




//스트링 빌더 버퍼리더 써야됨 입출력이 많기에
//스트링 빌더로 리턴하는 방법도 있다